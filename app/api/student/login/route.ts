import { NextResponse } from "next/server";
import pool from "@/lib/db";
import bcrypt from "bcrypt";

export async function POST(req: Request) {
  console.log("üü¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà API /api/student/login");

  const { std_code, password } = await req.json();
  console.log("üì• ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å client:", { std_code, password });

  const client = await pool.connect();
  const result = await client.query(
    "SELECT * FROM tb_student WHERE std_code = $1",
    [std_code]
  );
  client.release();

  if (result.rows.length === 0) {
    console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤:", std_code);
    return NextResponse.json(
      { success: false, message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤" },
      { status: 404 }
    );
  }

  const student = result.rows[0];
  const storedPassword = student.password;

  // ‚úÖ ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ password ‡∏à‡∏£‡∏¥‡∏á (null, "", "-") ‚Üí ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î
  if (!storedPassword || storedPassword === "" || storedPassword === "-") {
    const birthdate = new Date(student.birthdate);
    const expectedPassword = `${birthdate.getFullYear()}${(birthdate.getMonth() + 1)
      .toString()
      .padStart(2, "0")}${birthdate.getDate().toString().padStart(2, "0")}`;

    console.log("üîê ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô ‚Üí ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î:", expectedPassword);

    if (password !== expectedPassword) {
      console.log("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á");
      return NextResponse.json(
        { success: false, message: "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" },
        { status: 401 }
      );
    }

    console.log("‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î:", std_code);
    return NextResponse.json({ success: true, data: student });
  }

  // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ password ‚Üí ‡πÉ‡∏ä‡πâ bcrypt ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö
  console.log("üîê ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô ‚Üí ‡∏ï‡∏£‡∏ß‡∏à‡∏î‡πâ‡∏ß‡∏¢ bcrypt");

  const isMatch = await bcrypt.compare(password, storedPassword);

  if (!isMatch) {
    console.log("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á (bcrypt)");
    return NextResponse.json(
      { success: false, message: "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" },
      { status: 401 }
    );
  }

  console.log("‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏î‡πâ‡∏ß‡∏¢ bcrypt:", std_code);
  return NextResponse.json({ success: true, data: student });
}
